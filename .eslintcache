[{"/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/index.js":"1","/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/App.jsx":"2","/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/Home.jsx":"3","/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/LoggedOutNavbar.jsx":"4","/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/About.jsx":"5","/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/SignIn.jsx":"6","/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/SignUp.jsx":"7","/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/styles/App.js":"8","/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/Footer.jsx":"9","/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/styles/Form.js":"10","/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/LoggedInNavBar.jsx":"11","/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/Company.jsx":"12","/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/EditCompany.jsx":"13","/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/SideNavBars.jsx":"14","/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/CreateCompany.jsx":"15","/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/EditDriver.jsx":"16","/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/ViewFleet.jsx":"17","/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/ViewVehicle.jsx":"18","/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/DeleteVehicle.jsx":"19","/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/ViewDrivers.jsx":"20","/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/DeleteDriver.jsx":"21","/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/ViewDriver.jsx":"22","/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/AddVehicle.jsx":"23","/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/EditVehicle.jsx":"24"},{"size":517,"mtime":1611971643568,"results":"25","hashOfConfig":"26"},{"size":1602,"mtime":1612259697141,"results":"27","hashOfConfig":"26"},{"size":1782,"mtime":1612145445107,"results":"28","hashOfConfig":"26"},{"size":477,"mtime":1612145458459,"results":"29","hashOfConfig":"26"},{"size":2655,"mtime":1612142634865,"results":"30","hashOfConfig":"26"},{"size":2251,"mtime":1612145473535,"results":"31","hashOfConfig":"26"},{"size":4370,"mtime":1612145483155,"results":"32","hashOfConfig":"26"},{"size":6167,"mtime":1612262087938,"results":"33","hashOfConfig":"26"},{"size":442,"mtime":1612145426163,"results":"34","hashOfConfig":"26"},{"size":1367,"mtime":1612263358591,"results":"35","hashOfConfig":"26"},{"size":520,"mtime":1612145451771,"results":"36","hashOfConfig":"26"},{"size":384,"mtime":1612091919803,"results":"37","hashOfConfig":"26"},{"size":5757,"mtime":1612263551710,"results":"38","hashOfConfig":"26"},{"size":1513,"mtime":1612260467337,"results":"39","hashOfConfig":"26"},{"size":4892,"mtime":1612263469116,"results":"40","hashOfConfig":"26"},{"size":3672,"mtime":1612146224992,"results":"41","hashOfConfig":"26"},{"size":5424,"mtime":1612262170552,"results":"42","hashOfConfig":"26"},{"size":2584,"mtime":1612262107610,"results":"43","hashOfConfig":"26"},{"size":105,"mtime":1612159593243,"results":"44","hashOfConfig":"26"},{"size":5118,"mtime":1612262201253,"results":"45","hashOfConfig":"26"},{"size":3704,"mtime":1612181263632,"results":"46","hashOfConfig":"26"},{"size":95,"mtime":1612181380536,"results":"47","hashOfConfig":"26"},{"size":7222,"mtime":1612262278635,"results":"48","hashOfConfig":"26"},{"size":7223,"mtime":1612262310767,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1165ymf",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"59"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/index.js",[],["105","106"],"/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/App.jsx",[],"/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/Home.jsx",[],"/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/LoggedOutNavbar.jsx",[],["107","108"],"/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/About.jsx",[],"/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/SignIn.jsx",["109"],"import React, { useState } from \"react\";\nimport { LoggedOutNavbar } from \"./LoggedOutNavbar\";\nimport {\n  Form,\n  FormGroup,\n  FormLabel,\n  FormInput,\n  SubmitInput,\n} from \"./styles/Form\";\nimport { Footer } from \"./Footer\";\n\nexport function LogIn(history) {\n  // const [email, setEmail] = useState(\"\");\n  // const [password, setPassword] = useState(\"\");\n  // const [errMessage, setErrMessage] = useState(\"\");\n\n  // async function onFormSubmit(event) {\n  //   event.preventDefault();\n  //   const body = {\n  //     auth: { email, password },\n  //   };\n  //   try {\n  //     const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/login`, {\n  //       method: \"POST\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //       body: JSON.stringify(body),\n  //     });\n  //     if (response.status >= 400) {\n  //       throw new Error(\"incorrect credentials\");\n  //     } else {\n  //       const { jwt } = await response.json();\n  //       localStorage.setItem(\"token\", jwt);\n  //       history.push(\"/subscriptions\");\n  //     }\n  //   } catch (err) {\n  //     setErrMessage(err.message);\n  //   }\n  // }\n  return (\n    <>\n      <LoggedOutNavbar />\n      <h1\n        style={{\n          textAlign: \"center\",\n          marginTop: \"30px\",\n          fontFamily: \"sans-serif\",\n          fontSize: \"35px\",\n        }}\n      >\n        Log In\n      </h1>\n      {/* {errMessage && <span>{errMessage}</span>} */}\n      <Form>\n        <FormGroup>\n          <FormLabel htmlFor=\"email\">Email</FormLabel>\n          <FormInput\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            placeholder=\"maicon@email.com\"\n            // value={email}\n            // onChange={(e) => setEmail(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <FormLabel htmlFor=\"password\">Password</FormLabel>\n          <FormInput\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            placeholder=\"Password\"\n            // value={password}\n            // onChange={(e) => setPassword(e.target.value)}\n          />\n        </FormGroup>\n        <SubmitInput id=\"submit\" type=\"submit\" value=\"Submit\" />\n      </Form>\n      <Footer />\n    </>\n  );\n}\n","/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/SignUp.jsx",["110"],"import React, { useState } from \"react\";\nimport { LoggedOutNavbar } from \"./LoggedOutNavbar\";\nimport {\n  Form,\n  FormGroup,\n  FormLabel,\n  FormInput,\n  SubmitInput,\n  FormSelect,\n} from \"./styles/Form\";\nimport { Footer } from \"./Footer\";\n\nexport function SignUp({ history }) {\n  //   const [email, setEmail] = useState(\"\");\n  //   const [password, setPassword] = useState(\"\");\n\n  //   async function onFormSubmit(event) {\n  //     event.preventDefault();\n  //     const body = { user: { email, password } };\n  //     try {\n  //       const response = await fetch(\n  //         `${process.env.REACT_APP_BACKEND_URL}/sign-up`,\n  //         {\n  //           method: \"POST\",\n  //           headers: {\n  //             \"Content-Type\": \"application/json\",\n  //           },\n  //           body: JSON.stringify(body),\n  //         }\n  //       );\n  //       if (response.status >= 400) {\n  //         throw new Error(\"incorrect credentials\");\n  //       } else {\n  //         const response = await fetch(\n  //           `${process.env.REACT_APP_BACKEND_URL}/login`,\n  //           {\n  //             method: \"POST\",\n  //             headers: {\n  //               \"Content-Type\": \"application/json\",\n  //             },\n  //             body: JSON.stringify({ auth: { email, password } }),\n  //           }\n  //         );\n  //         const { jwt } = await response.json();\n  //         localStorage.setItem(\"token\", jwt);\n  //         history.push(\"/subscriptions\");\n  //       }\n  //     } catch (err) {\n  //       console.log(err.message);\n  //     }\n  //   }\n\n  const letters = [\"A\", \"B\", \"C\", \"D\"];\n  return (\n    <>\n      <LoggedOutNavbar />\n      <h1\n        style={{\n          textAlign: \"center\",\n          marginTop: \"30px\",\n          fontFamily: \"sans-serif\",\n          fontSize: \"35px\",\n        }}\n      >\n        Create an account\n      </h1>\n      {/* {errMessage && <span>{errMessage}</span>} */}\n      <Form>\n        <FormGroup>\n          <FormLabel htmlFor=\"FullName\">Full Name</FormLabel>\n          <FormInput\n            type=\"text\"\n            name=\"FullName\"\n            id=\"FullName\"\n            placeholder=\"John Smith\"\n            // value={password}\n            // onChange={(e) => setPassword(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <FormLabel htmlFor=\"ContactNumber\">Contact Number</FormLabel>\n          <FormInput\n            type=\"text\"\n            name=\"ContactNumber\"\n            id=\"ContactNumber\"\n            placeholder=\"040 000 000\"\n            // value={password}\n            // onChange={(e) => setPassword(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <FormLabel htmlFor=\"LicenseNumber\">Drivers License Number</FormLabel>\n          <FormInput\n            type=\"text\"\n            name=\"Drivers License Number\"\n            id=\"Drivers License Number\"\n            placeholder=\"1212121212\"\n            // value={password}\n            // onChange={(e) => setPassword(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <FormLabel htmlFor=\"email\">Email</FormLabel>\n          <FormInput\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            placeholder=\"maicon@email.com\"\n            // value={email}\n            // onChange={(e) => setEmail(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <FormLabel htmlFor=\"password\">Password</FormLabel>\n          <FormInput\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            placeholder=\"Password\"\n            // value={password}\n            // onChange={(e) => setPassword(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <FormLabel htmlFor=\"companyName\">Company Name</FormLabel>\n          <FormSelect\n            type=\"text\"\n            name=\"company\"\n            id=\"companyName\"\n            // value={password}\n            // onChange={(e) => setPassword(e.target.value)}\n          >\n            {letters.map((letter) => {\n              return (\n                <option key={letters.indexOf(letter)} value={letter}>\n                  {letter}\n                </option>\n              );\n            })}\n          </FormSelect>\n        </FormGroup>\n\n        <SubmitInput id=\"submit\" type=\"submit\" value=\"Submit\" />\n      </Form>\n      <Footer />\n    </>\n  );\n}\n",["111","112"],"/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/styles/App.js",[],"/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/Footer.jsx",[],"/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/styles/Form.js",[],"/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/LoggedInNavBar.jsx",[],"/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/Company.jsx",[],"/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/EditCompany.jsx",["113"],"/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/SideNavBars.jsx",[],"/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/CreateCompany.jsx",["114"],"/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/EditDriver.jsx",["115"],"import React, { useState } from \"react\";\nimport {\n  Form,\n  FormGroup,\n  FormLabel,\n  FormInput,\n  SubmitInput,\n  MainContent,\n} from \"./styles/Form\";\nimport { LoggedInNavBar } from \"./LoggedInNavBar\";\nimport { SideNavBars } from \"./SideNavBars\";\nimport { CompanyPage, Section } from \"./styles/App\";\nimport { Footer } from \"./Footer\";\n\nexport function EditDriver({ history }) {\n  //   const [email, setEmail] = useState(\"\");\n  //   const [password, setPassword] = useState(\"\");\n\n  //   async function onFormSubmit(event) {\n  //     event.preventDefault();\n  //     const body = { user: { email, password } };\n  //     try {\n  //       const response = await fetch(\n  //         `${process.env.REACT_APP_BACKEND_URL}/sign-up`,\n  //         {\n  //           method: \"POST\",\n  //           headers: {\n  //             \"Content-Type\": \"application/json\",\n  //           },\n  //           body: JSON.stringify(body),\n  //         }\n  //       );\n  //       if (response.status >= 400) {\n  //         throw new Error(\"incorrect credentials\");\n  //       } else {\n  //         const response = await fetch(\n  //           `${process.env.REACT_APP_BACKEND_URL}/login`,\n  //           {\n  //             method: \"POST\",\n  //             headers: {\n  //               \"Content-Type\": \"application/json\",\n  //             },\n  //             body: JSON.stringify({ auth: { email, password } }),\n  //           }\n  //         );\n  //         const { jwt } = await response.json();\n  //         localStorage.setItem(\"token\", jwt);\n  //         history.push(\"/subscriptions\");\n  //       }\n  //     } catch (err) {\n  //       console.log(err.message);\n  //     }\n  //   }\n\n  return (\n    <>\n      <CompanyPage>\n        <SideNavBars />\n        <Section>\n          <LoggedInNavBar />\n          <MainContent>\n            <h1\n              style={{\n                textAlign: \"center\",\n                marginTop: \"30px\",\n                fontFamily: \"sans-serif\",\n                fontSize: \"35px\",\n              }}\n            >\n              Update a driver\n            </h1>\n            {/* {errMessage && <span>{errMessage}</span>} */}\n            <Form>\n              <FormGroup>\n                <FormLabel htmlFor=\"FullName\">Full Name</FormLabel>\n                <FormInput\n                  type=\"text\"\n                  name=\"FullName\"\n                  id=\"FullName\"\n                  placeholder=\"John Smith\"\n                  // value={password}\n                  // onChange={(e) => setPassword(e.target.value)}\n                />\n              </FormGroup>\n              <FormGroup>\n                <FormLabel htmlFor=\"ContactNumber\">Contact Number</FormLabel>\n                <FormInput\n                  type=\"text\"\n                  name=\"ContactNumber\"\n                  id=\"ContactNumber\"\n                  placeholder=\"040 000 000\"\n                  // value={password}\n                  // onChange={(e) => setPassword(e.target.value)}\n                />\n              </FormGroup>\n              <FormGroup>\n                <FormLabel htmlFor=\"LicenseNumber\">\n                  Drivers License Number\n                </FormLabel>\n                <FormInput\n                  type=\"text\"\n                  name=\"Drivers License Number\"\n                  id=\"Drivers License Number\"\n                  placeholder=\"1212121212\"\n                  // value={password}\n                  // onChange={(e) => setPassword(e.target.value)}\n                />\n              </FormGroup>\n\n              <SubmitInput id=\"submit\" type=\"submit\" value=\"Submit Updates\" />\n            </Form>\n          </MainContent>\n        </Section>\n      </CompanyPage>\n      <Footer />\n    </>\n  );\n}\n","/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/ViewFleet.jsx",["116"],"/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/ViewVehicle.jsx",["117"],"/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/DeleteVehicle.jsx",[],"/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/ViewDrivers.jsx",["118"],"/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/DeleteDriver.jsx",["119"],"import React, { useState } from \"react\";\nimport {\n  Form,\n  FormGroup,\n  FormLabel,\n  FormInput,\n  SubmitInput,\n  MainContent,\n} from \"./styles/Form\";\nimport { LoggedInNavBar } from \"./LoggedInNavBar\";\nimport { SideNavBars } from \"./SideNavBars\";\nimport { CompanyPage, Section } from \"./styles/App\";\nimport { Footer } from \"./Footer\";\n\nexport function DeleteDriver({ history }) {\n  //   const [email, setEmail] = useState(\"\");\n  //   const [password, setPassword] = useState(\"\");\n\n  //   async function onFormSubmit(event) {\n  //     event.preventDefault();\n  //     const body = { user: { email, password } };\n  //     try {\n  //       const response = await fetch(\n  //         `${process.env.REACT_APP_BACKEND_URL}/sign-up`,\n  //         {\n  //           method: \"POST\",\n  //           headers: {\n  //             \"Content-Type\": \"application/json\",\n  //           },\n  //           body: JSON.stringify(body),\n  //         }\n  //       );\n  //       if (response.status >= 400) {\n  //         throw new Error(\"incorrect credentials\");\n  //       } else {\n  //         const response = await fetch(\n  //           `${process.env.REACT_APP_BACKEND_URL}/login`,\n  //           {\n  //             method: \"POST\",\n  //             headers: {\n  //               \"Content-Type\": \"application/json\",\n  //             },\n  //             body: JSON.stringify({ auth: { email, password } }),\n  //           }\n  //         );\n  //         const { jwt } = await response.json();\n  //         localStorage.setItem(\"token\", jwt);\n  //         history.push(\"/subscriptions\");\n  //       }\n  //     } catch (err) {\n  //       console.log(err.message);\n  //     }\n  //   }\n\n  return (\n    <>\n      <CompanyPage>\n        <SideNavBars />\n        <Section>\n          <LoggedInNavBar />\n          <MainContent>\n            <h1\n              style={{\n                textAlign: \"center\",\n                marginTop: \"30px\",\n                fontFamily: \"sans-serif\",\n                fontSize: \"35px\",\n              }}\n            >\n              Remove a driver\n            </h1>\n            {/* {errMessage && <span>{errMessage}</span>} */}\n            <Form>\n              <FormGroup>\n                <FormLabel htmlFor=\"FullName\">Full Name</FormLabel>\n                <FormInput\n                  type=\"text\"\n                  name=\"FullName\"\n                  id=\"FullName\"\n                  placeholder=\"John Smith\"\n                  // value={password}\n                  // onChange={(e) => setPassword(e.target.value)}\n                />\n              </FormGroup>\n              <FormGroup>\n                <FormLabel htmlFor=\"ContactNumber\">Contact Number</FormLabel>\n                <FormInput\n                  type=\"text\"\n                  name=\"ContactNumber\"\n                  id=\"ContactNumber\"\n                  placeholder=\"040 000 000\"\n                  // value={password}\n                  // onChange={(e) => setPassword(e.target.value)}\n                />\n              </FormGroup>\n              <FormGroup>\n                <FormLabel htmlFor=\"LicenseNumber\">\n                  Drivers License Number\n                </FormLabel>\n                <FormInput\n                  type=\"text\"\n                  name=\"Drivers License Number\"\n                  id=\"Drivers License Number\"\n                  placeholder=\"1212121212\"\n                  // value={password}\n                  // onChange={(e) => setPassword(e.target.value)}\n                />\n              </FormGroup>                           \n              <SubmitInput id=\"submit\" type=\"submit\" value=\"Remove this driver\" />\n            </Form>\n          </MainContent>\n        </Section>\n      </CompanyPage>\n      <Footer />\n    </>\n  );\n}\n","/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/ViewDriver.jsx",[],"/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/AddVehicle.jsx",["120"],"/home/mbahadori/Desktop/fleet-management/fleet-management-frontend/src/components/EditVehicle.jsx",["121"],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"122","replacedBy":"126"},{"ruleId":"124","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":25},{"ruleId":"128","severity":1,"message":"129","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":25},{"ruleId":"122","replacedBy":"132"},{"ruleId":"124","replacedBy":"133"},{"ruleId":"128","severity":1,"message":"129","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":25},{"ruleId":"128","severity":1,"message":"129","line":2,"column":17,"nodeType":"130","messageId":"131","endLine":2,"endColumn":25},{"ruleId":"128","severity":1,"message":"129","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":25},{"ruleId":"128","severity":1,"message":"129","line":12,"column":17,"nodeType":"130","messageId":"131","endLine":12,"endColumn":25},{"ruleId":"128","severity":1,"message":"129","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":25},{"ruleId":"128","severity":1,"message":"129","line":12,"column":17,"nodeType":"130","messageId":"131","endLine":12,"endColumn":25},{"ruleId":"128","severity":1,"message":"129","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":25},{"ruleId":"128","severity":1,"message":"129","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":25},{"ruleId":"128","severity":1,"message":"129","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":25},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],["134"],["135"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["134"],["135"],"no-global-assign","no-unsafe-negation"]